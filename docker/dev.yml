version: '3'

volumes:
  local_postgres_data: {}

services:
  app: &django
    build:
      context: .
      dockerfile: ./dev/django/Dockerfile
    image: dev_app
    depends_on:
      - redis
      - postgres
      - mailhog
    volumes:
      - ../taturana:/app
    env_file:
      - ./.envs/.dev/.django
      - ./.envs/.dev/.postgres
    ports:
      - "80:8000"
    command: /start-django-app

  postgres:
    build:
      context: .
      dockerfile: ./production/postgres/Dockerfile
    image: dev_db
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.dev/.postgres

  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - "8025:8025"

  redis:
    image: redis:latest # that's safe

  rabbit:
    hostname: rabbit
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "8080:15672"

  celeryworker:
    <<: *django
    image: dev_celery_worker
    depends_on:
      - redis
      - postgres
      - rabbit
    links:
      - rabbit
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: dev_celery_beat
    depends_on:
      - celeryworker
    links:
      - rabbit
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: dev_celery_flower
    depends_on:
      - celeryworker
    ports:
      - 5555:5555
    command: /start-flower
